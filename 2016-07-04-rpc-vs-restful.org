* 以什么样的方式向客户端提供服务

常用的方法有:

RPC 所谓的远程过程调用 (面向方法)
SOA 所谓的面向服务的架构(面向消息)
REST 所谓的 Representational state transfer (面向资源)


* RPC与REST的区别

如果你想只记住一点,那么就请记住 RPC是以动词为中心的, REST是以名词为中心的, 此处的 动词指的是一些方法, 名词是指资源.

你会发现,以动词为中心, 意味着, 当你要需要加入新功能时,你必须要添加更多的动词, 这时候服务器端需要实现 相应的动词(方法), 客户端需要知道这个新的动词并进行调用.

而以名词为中心, 假使我请求的是 hostname/friends/, 无论这个URI对应的服务怎么变化,客户端是无需 关注和更新的,而这种变化对客户端也是透明的. ??

至于其它的区别,如对实现语言的依赖, 耦合性等,这些都是上面提到的这个根本区别所衍生的.


[[http://www.slideshare.net/trilancer/restful-user-experience-1421793][推荐阅读 Restful User Experience (这个slide是个人认为解释的最好的)]]

根据笔者自己的经验和心得, 建议 能够使用REST就尽量使用REST, 主要基于下面几个考虑:

+ 扩展性
+ 松耦合(意味着,不用强制要求客户端去更新相应的代码)
+ 服务端实现语言无关
+ 性能
+ 安全性(例如HTTPS)


* 如何选择

+ 如果只是内部接口可以RPC，如果需要提供给外部访问需要restful
+ 绝大多数平台提供的都是restful的接口: Aws，facebook.
